---
## Author
author:
  name: Ши Иван Юанович
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6

## Title
title: "Лабораторная работа №2"
subtitle: "Система контроля версий git"
---

# Цель работы

Изучение идеологии и применения средств контроля версий, приобретение практических навыков по работе с системой контроля версий git.

Цель данного шаблона --- максимально упростить подготовку отчётов по лабораторным работам.
Модифицируя данный шаблон, студенты смогут без труда подготовить отчёт по лабораторным работам, а также познакомиться с основными возможностями разметки Markdown.

# Задание

Создать учетной записи и настроить github  
Создать SSH ключа  
Создать рабочее пространство и репозиторий курса на основе шаблона
Настроить каталог курса
Создать отчёт по лабораторной работе №2 и загрузить его на github

# Выполнение лабораторной работы

Создадим учетную запись на сайте https://github.com/ и заполним основные данные.

Сделаем предварительную конфигурацию git и настроим её.

![Создание и настройка конфигурации git](image/1.png){#fig:001 width=70%}

Для последующей идентификации пользователя на сервере репозиториев необходимо сгенерировать пару ключей (приватный и открытый).

![Cоздания приватного ключа и запись его в каталог ~/.ssh/](image/2.png){#fig:002 width=70%}

После чего находим свой ключ.

![Находим ключ](image/3.png){#fig:003 width=70%}

Переходим на сайт http://github.org/ под своей учётной записью в меню Setting. После этого выбраем в боковом меню SSH and GPG keys и нажимаем кнопку New SSH key. Вставляем ключ в появившееся на сайте поле и указываем для ключа имя (Title).

![Создаем ключ на сайте](image/4.png){#fig:004 width=70%}

![Проверяем добавление ключа](image/5.png){#fig:005 width=70%}

Создание рабочего пространства и репозитория курса на основе шаблона.

![Создание рабочего пространства](image/6.png){#fig:006 width=70%}

Перейдем на станицу репозитория с шаблоном курса https://github.com/yamadharma/course-directory-student-template. Далее выберем Use this template. В открывшемся окне задайте имя репозитория (Repository name) study_2025–2026_arhpc и создаем репозиторий (кнопка Create repository from template).

![Создаем репозиторий по шаблону и называем его “study_2025–2026_arh-pc”](image/7.png){#fig:007 width=70%}

Откроем терминал и перейдем в каталог курса.

![Переходим в каталог курса](image/8.png){#fig:008 width=70%}

Клонируйте созданный репозиторий.

![Клонируем созданный репозиторий](image/9.png){#fig:009 width=70%}

Перейдем в каталог курса.

![Переходим в каталог курса](image/10.png){#fig:010 width=70%}

Создаем необходимые каталоги.

![Создаем необходимые файлы](image/11.png){#fig:011 width=70%}

Отправим файлы на сервер.

![Отслеживаем файл, записываем изменения в клонированный репозиторий и отправляем данные в репозиторий](image/12.png){#fig:012 width=70%}

Проверем правильность создания иерархии рабочего пространства в локальном репозитории и на странице github

![Проверяем правильность выполнения команд в терминале](image/13.png){#fig:013 width=70%}

![Проверяем правильность выполнения команд в github](image/14.png){#fig:014 width=70%}

# Задания для самостоятельной работы

Создадим отчёт по выполнению лабораторной работы №2 в соответствующем каталоге labs/lab02/report.

![Создание отчета](image/15.png){#fig:015 width=70%}

Скопируем отчеты по выполнению предыдущих лабораторных работ в соответствующие каталоги созданного рабочего пространства.

![Копируем первый отчет в соответствующий каталог](image/16.png){#fig:016 width=70%}

Загрузим файлы на github.

![Загружаем все на github](image/17.png){#fig:017 width=70%}


# Выводы

Освоил систему контроля версий Git: настроил локальное окружение, создал удалённый репозиторий на GitHub и загрузил в него отчёты по лабораторным работам.

# Список литературы{.unnumbered}

1.
GDB:
The
GNU
Project
https://www.gnu.org/software/gdb/.Debugger.—URL:
2.
GNU
Bash
Manual.
—
https://www.gnu.org/software/bash/manual/.2016.—URL:
3. Midnight Commander Development Center. — 2021. — URL:
https://midnight-commander.
org/.
4. NASM Assembly
https://asmtutor.com/.
Language
Tutorials.
—
2021.
—
URL:
5. Newham C. Learning the bash Shell: Unix Shell Programming. — O’Reilly
Media, 2005. —
354 с. — (In a Nutshell). — ISBN 0596009658. — URL:
http://www.amazon.com/Learningbash-Shell-Programming-
Nutshell/dp/0596009658.
6. Robbins A. Bash Pocket Reference. — O’Reilly Media, 2016. — 156 с. —
ISBN 978-1491941591.
7.
The
NASM
documentation.
https://www.nasm.us/docs.php.
—
2021.
—
URL:
8. Zarrelli G. Mastering Bash. — Packt Publishing, 2017. — 502 с. — ISBN
9781784396879.
9. Колдаев В. Д., Лупин С. А. Архитектура ЭВМ. — М. : Форум, 2018.10. Куляс О. Л., Никитин К. А. Курс программирования на
ASSEMBLER. — М. : Солон-Пресс, 2017.
11. Новожилов О. П. Архитектура ЭВМ и систем. — М. : Юрайт, 2016.
12. Расширенный ассемблер: NASM.
https://www.opennet.ru/docs/RUS/nasm/.
—
2021.
—
URL:
13. Робачевский А., Немнюгин С., Стесик О. Операционная система
UNIX. — 2-е изд. — БХВПетербург, 2010. — 656 с. — ISBN 978-5-
94157-538-1.
14. Столяров А. Программирование на языке ассемблера NASM для ОС
Unix. — 2-е изд. —
М.
:
МАКС
Пресс,
2011.
—
URL:
http://www.stolyarov.info/books/asm_unix.
15. Таненбаум Э. Архитектура компьютера. — 6-е изд. — СПб. : Питер,
2013. — 874 с. —
(Классика Computer Science).
16. Таненбаум Э., Бос Х. Современные операционные системы. — 4-е
изд. — СПб. : Питер,
2015. — 1120 с. — (Классика Computer Science).

::: {#refs}
:::
